{"ast":null,"code":"import axios from \"axios\";\nimport printValue from \"yup/es/util/printValue\";\nconst API_URL = \"http://localhost/api/v1/accounts/login/\";\nclass AuthService {\n  login(username, password) {\n    const loginBody = JSON.stringify({\n      username: username,\n      password: password\n    });\n    var customConfig = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    printValue(axios.post(API_URL, loginBody, customConfig));\n    return axios.postForm(API_URL, loginBody, customConfig).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n      return response.data;\n    });\n  }\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n  getCurrentUser() {\n    const userStr = localStorage.getItem(\"user\");\n    if (userStr) return JSON.parse(userStr);\n    return null;\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","printValue","API_URL","AuthService","login","username","password","loginBody","JSON","stringify","customConfig","headers","post","postForm","then","response","data","accessToken","localStorage","setItem","logout","removeItem","register","email","getCurrentUser","userStr","getItem","parse"],"sources":["/Users/aleksandrandreev/bmstu_reports_system_web_app/src/services/auth.service.ts"],"sourcesContent":["import axios from \"axios\";\nimport printValue from \"yup/es/util/printValue\";\n\nconst API_URL = \"http://localhost/api/v1/accounts/login/\";\n\nclass AuthService {\n\n  login(username: string, password: string) {\n    const loginBody = JSON.stringify({ username: username, password: password });\n    var customConfig = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    printValue(axios.post(API_URL, loginBody, customConfig));\n\n    return axios\n      .postForm(API_URL, loginBody, customConfig)\n      .then(response => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username: string, email: string, password: string) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    const userStr = localStorage.getItem(\"user\");\n    if (userStr) return JSON.parse(userStr);\n\n    return null;\n  }\n}\n\nexport default new AuthService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,wBAAwB;AAE/C,MAAMC,OAAO,GAAG,yCAAyC;AAEzD,MAAMC,WAAW,CAAC;EAEhBC,KAAK,CAACC,QAAgB,EAAEC,QAAgB,EAAE;IACxC,MAAMC,SAAS,GAAGC,IAAI,CAACC,SAAS,CAAC;MAAEJ,QAAQ,EAAEA,QAAQ;MAAEC,QAAQ,EAAEA;IAAS,CAAC,CAAC;IAC5E,IAAII,YAAY,GAAG;MACjBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAEDV,UAAU,CAACD,KAAK,CAACY,IAAI,CAACV,OAAO,EAAEK,SAAS,EAAEG,YAAY,CAAC,CAAC;IAExD,OAAOV,KAAK,CACTa,QAAQ,CAACX,OAAO,EAAEK,SAAS,EAAEG,YAAY,CAAC,CAC1CI,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAACC,WAAW,EAAE;QAC7BC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEX,IAAI,CAACC,SAAS,CAACM,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC7D;MACA,OAAOD,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC;EACN;EAEAI,MAAM,GAAG;IACPF,YAAY,CAACG,UAAU,CAAC,MAAM,CAAC;EACjC;EAEAC,QAAQ,CAACjB,QAAgB,EAAEkB,KAAa,EAAEjB,QAAgB,EAAE;IAC1D,OAAON,KAAK,CAACY,IAAI,CAACV,OAAO,GAAG,QAAQ,EAAE;MACpCG,QAAQ;MACRkB,KAAK;MACLjB;IACF,CAAC,CAAC;EACJ;EAEAkB,cAAc,GAAG;IACf,MAAMC,OAAO,GAAGP,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAC;IAC5C,IAAID,OAAO,EAAE,OAAOjB,IAAI,CAACmB,KAAK,CAACF,OAAO,CAAC;IAEvC,OAAO,IAAI;EACb;AACF;AAEA,eAAe,IAAItB,WAAW,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}