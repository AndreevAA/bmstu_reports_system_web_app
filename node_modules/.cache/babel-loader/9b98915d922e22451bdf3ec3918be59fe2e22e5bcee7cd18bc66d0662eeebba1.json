{"ast":null,"code":"import axios from \"axios\";\nimport printValue from \"yup/es/util/printValue\";\nconst API_URL = \"http://localhost/api/v1/accounts/login/\";\nclass AuthService {\n  login(username, password) {\n    printValue(\"HERE\");\n    return axios.post(API_URL, {\n      username,\n      password\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n      printValue(response.data);\n      return response.data;\n    });\n  }\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n  getCurrentUser() {\n    const userStr = localStorage.getItem(\"user\");\n    if (userStr) return JSON.parse(userStr);\n    return null;\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","printValue","API_URL","AuthService","login","username","password","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","register","email","getCurrentUser","userStr","getItem","parse"],"sources":["/Users/aleksandrandreev/bmstu_reports_system_web_app/src/services/auth.service.ts"],"sourcesContent":["import axios from \"axios\";\nimport printValue from \"yup/es/util/printValue\";\n\nconst API_URL = \"http://localhost/api/v1/accounts/login/\";\n\nclass AuthService {\n  login(username: string, password: string) {\n    printValue(\"HERE\");\n    return axios\n      .post(API_URL, {\n        username,\n        password\n      })\n      .then(response => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        printValue(response.data);\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username: string, email: string, password: string) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    const userStr = localStorage.getItem(\"user\");\n    if (userStr) return JSON.parse(userStr);\n\n    return null;\n  }\n}\n\nexport default new AuthService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,wBAAwB;AAE/C,MAAMC,OAAO,GAAG,yCAAyC;AAEzD,MAAMC,WAAW,CAAC;EAChBC,KAAK,CAACC,QAAgB,EAAEC,QAAgB,EAAE;IACxCL,UAAU,CAAC,MAAM,CAAC;IAClB,OAAOD,KAAK,CACTO,IAAI,CAACL,OAAO,EAAE;MACbG,QAAQ;MACRC;IACF,CAAC,CAAC,CACDE,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAACC,WAAW,EAAE;QAC7BC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC7D;MAEAT,UAAU,CAACQ,QAAQ,CAACC,IAAI,CAAC;MAEzB,OAAOD,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC;EACN;EAEAM,MAAM,GAAG;IACPJ,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;EACjC;EAEAC,QAAQ,CAACb,QAAgB,EAAEc,KAAa,EAAEb,QAAgB,EAAE;IAC1D,OAAON,KAAK,CAACO,IAAI,CAACL,OAAO,GAAG,QAAQ,EAAE;MACpCG,QAAQ;MACRc,KAAK;MACLb;IACF,CAAC,CAAC;EACJ;EAEAc,cAAc,GAAG;IACf,MAAMC,OAAO,GAAGT,YAAY,CAACU,OAAO,CAAC,MAAM,CAAC;IAC5C,IAAID,OAAO,EAAE,OAAOP,IAAI,CAACS,KAAK,CAACF,OAAO,CAAC;IAEvC,OAAO,IAAI;EACb;AACF;AAEA,eAAe,IAAIlB,WAAW,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}