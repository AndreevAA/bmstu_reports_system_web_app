{"ast":null,"code":"import axios from 'axios';\nimport authHeader from './auth-header';\n// import {Http, Headers, Response } from \"@angular/http\";\n\nconst API_URL = 'http://localhost:8000/api/v1/reports';\nclass UserService {\n  getPublicContent() {\n    const userStr = localStorage.getItem(\"user\");\n    let user = null;\n    if (userStr) user = JSON.parse(userStr);\n    const login_user_data = JSON.stringify({\n      username: user.username,\n      password: user.password\n    });\n    return axios.post(API_URL + \"login\", login_user_data).then(response => {\n      console.log(response.data);\n      debugger;\n      if (response.data.token) {\n        axios.get(API_URL, {\n          headers: {\n            Authorization: 'Bearer ' + response.data.token\n          }\n        });\n      }\n    });\n  }\n  getUserBoard() {\n    return this.getPublicContent();\n    // return axios.get(API_URL + 'user', { headers: authHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', {\n      headers: authHeader()\n    });\n  }\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', {\n      headers: authHeader()\n    });\n  }\n}\nexport default new UserService();","map":{"version":3,"names":["axios","authHeader","API_URL","UserService","getPublicContent","userStr","localStorage","getItem","user","JSON","parse","login_user_data","stringify","username","password","post","then","response","console","log","data","token","get","headers","Authorization","getUserBoard","getModeratorBoard","getAdminBoard"],"sources":["/Users/andreevalexander/bmstu_web/bmstu_reports_system_web_app/src/services/user.service.ts"],"sourcesContent":["import axios from 'axios';\nimport authHeader from './auth-header';\n// import {Http, Headers, Response } from \"@angular/http\";\n\nconst API_URL = 'http://localhost:8000/api/v1/reports';\n\nclass UserService {\n\n  getPublicContent() {\n\n    const userStr = localStorage.getItem(\"user\");\n    let user = null;\n    if (userStr)\n      user = JSON.parse(userStr);\n\n    const login_user_data = JSON.stringify({username: user.username, password: user.password});\n\n    return axios\n        .post(API_URL + \"login\", login_user_data)\n        .then(response => {\n          console.log(response.data);\n          debugger\n          if (response.data.token) {\n            axios.get(API_URL, {\n              headers:{\n                Authorization: 'Bearer ' + response.data.token,\n              },\n            });\n          }\n        })\n  }\n\n  getUserBoard() {\n    return this.getPublicContent();\n    // return axios.get(API_URL + 'user', { headers: authHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\n  }\n}\n\nexport default new UserService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,eAAe;AACtC;;AAEA,MAAMC,OAAO,GAAG,sCAAsC;AAEtD,MAAMC,WAAW,CAAC;EAEhBC,gBAAgB,GAAG;IAEjB,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC5C,IAAIC,IAAI,GAAG,IAAI;IACf,IAAIH,OAAO,EACTG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,OAAO,CAAC;IAE5B,MAAMM,eAAe,GAAGF,IAAI,CAACG,SAAS,CAAC;MAACC,QAAQ,EAAEL,IAAI,CAACK,QAAQ;MAAEC,QAAQ,EAAEN,IAAI,CAACM;IAAQ,CAAC,CAAC;IAE1F,OAAOd,KAAK,CACPe,IAAI,CAACb,OAAO,GAAG,OAAO,EAAES,eAAe,CAAC,CACxCK,IAAI,CAACC,QAAQ,IAAI;MAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1B;MACA,IAAIH,QAAQ,CAACG,IAAI,CAACC,KAAK,EAAE;QACvBrB,KAAK,CAACsB,GAAG,CAACpB,OAAO,EAAE;UACjBqB,OAAO,EAAC;YACNC,aAAa,EAAE,SAAS,GAAGP,QAAQ,CAACG,IAAI,CAACC;UAC3C;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACR;EAEAI,YAAY,GAAG;IACb,OAAO,IAAI,CAACrB,gBAAgB,EAAE;IAC9B;EACF;;EAEAsB,iBAAiB,GAAG;IAClB,OAAO1B,KAAK,CAACsB,GAAG,CAACpB,OAAO,GAAG,KAAK,EAAE;MAAEqB,OAAO,EAAEtB,UAAU;IAAG,CAAC,CAAC;EAC9D;EAEA0B,aAAa,GAAG;IACd,OAAO3B,KAAK,CAACsB,GAAG,CAACpB,OAAO,GAAG,OAAO,EAAE;MAAEqB,OAAO,EAAEtB,UAAU;IAAG,CAAC,CAAC;EAChE;AACF;AAEA,eAAe,IAAIE,WAAW,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}